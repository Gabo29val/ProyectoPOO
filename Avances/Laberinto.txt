import java.awt.Color;
import java.awt.Graphics;

public class Laberinto {
	private final int numeroFilas = 26;				
	private final int numeroColumnas = 35;		
	private final int anchoBloque = 20;
	private final int altoBloque = 20;
	
	public void pintarLaberinto(Graphics grafico) {
		int[][] laberinto = getLaberinto();
		
		for(int i = 0; i < numeroFilas; i++) {
			for(int j = 0; j < numeroColumnas; j++) {
				if(laberinto[i][j] == 1) {
					grafico.setColor(Color.orange);
					grafico.fillRect(j*20, i*20, anchoBloque, altoBloque);
					grafico.setColor(Color.red);
					grafico.drawRect(j*20, i*20, anchoBloque, altoBloque);
				}
				if(laberinto[i][j] == 2 || laberinto[i][j] == 5) {
					grafico.setColor(Color.red);
					grafico.fillRect(j*20, i*20, anchoBloque, altoBloque);
				}
				if(laberinto[i][j] == 3) {
					grafico.setColor(Color.green);
					grafico.fillRect(j*20, i*20, anchoBloque, altoBloque);
				}
				if(laberinto[i][j] == 4) {
					grafico.setColor(Color.blue);
					grafico.fillRect(j*20, i*20, anchoBloque, altoBloque);
				}
				
			}
		}
		
	}
	
	public int[][] getLaberinto(){
		int laberinto[][] = 
			{	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
				{1, 0, 0, 1, 0, 4, 0, 4, 0, 4, 0, 1, 4, 1, 4, 1, 0, 1, 4, 0, 4, 4, 4, 0, 4, 1, 0, 0, 4, 1, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 1, 4, 0, 4, 0, 4, 4, 1, 4, 1, 4, 4, 0, 4, 4, 0, 4, 0, 0, 0, 4, 4, 0, 4, 4, 1, 1, 0, 0, 0, 1},
				{1, 1, 0, 0, 0, 4, 1, 4, 0, 4, 0, 4, 4, 1, 4, 1, 4, 1, 4, 0, 4, 4, 4, 0, 4, 1, 4, 0, 4, 0, 0, 0, 0, 0, 1},
				{1, 1, 0, 1, 1, 4, 1, 4, 1, 4, 0, 0, 4, 1, 4, 1, 1, 1, 4, 1, 1, 1, 4, 1, 4, 1, 0, 0, 4, 1, 1, 1, 1, 3, 1},
				{1, 0, 0, 1, 0, 4, 4, 4, 0, 4, 0, 0, 4, 1, 4, 0, 0, 1, 4, 0, 4, 4, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 3, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 0, 1},
				{1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 3, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 2, 0, 1},
				{1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 3, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 2, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1},
				{1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 3, 0, 0, 2, 0, 5, 0, 2, 0, 1},
				{1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 3, 3, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 2, 0, 0, 0, 2, 0, 1},
				{1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 2, 0, 1},
				{1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 3, 1, 0, 3, 0, 0, 3, 0, 0, 3, 1, 0, 2, 0, 0, 0, 2, 0, 1},
				{1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 1},
				{1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
				{1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 1, 0, 1, 0, 0, 0, 0, 1, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 1},
				{1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 3, 3, 0, 1, 0, 1, 0, 1, 1, 1, 1, 3, 3, 0, 0, 0, 1, 0, 0, 0, 1, 1},
				{1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1},
				{1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
				{1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
				{1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 4, 4, 4, 1, 4, 1, 4, 4, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1},
				{1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 1, 1, 1, 4, 1, 4, 1, 1, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
				{1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 4, 1, 4, 4, 4, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
				{1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 4, 1, 1, 1, 4, 1, 1, 1, 4, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9},
				{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 4, 1, 4, 4, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
	
			};
		return laberinto;
	}

}
